# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import data_pb2 as data__pb2


class FileSystemStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateFile = channel.unary_unary(
        '/rpc.FileSystem/CreateFile',
        request_serializer=data__pb2.Filename.SerializeToString,
        response_deserializer=data__pb2.Response.FromString,
        )
    self.DeleteFile = channel.unary_unary(
        '/rpc.FileSystem/DeleteFile',
        request_serializer=data__pb2.Filename.SerializeToString,
        response_deserializer=data__pb2.Response.FromString,
        )
    self.ListFiles = channel.unary_stream(
        '/rpc.FileSystem/ListFiles',
        request_serializer=data__pb2.Empty.SerializeToString,
        response_deserializer=data__pb2.FileList.FromString,
        )
    self.Upload = channel.stream_unary(
        '/rpc.FileSystem/Upload',
        request_serializer=data__pb2.UploadRequest.SerializeToString,
        response_deserializer=data__pb2.Response.FromString,
        )
    self.Download = channel.unary_stream(
        '/rpc.FileSystem/Download',
        request_serializer=data__pb2.Filename.SerializeToString,
        response_deserializer=data__pb2.Chunk.FromString,
        )
    self.Lock = channel.unary_unary(
        '/rpc.FileSystem/Lock',
        request_serializer=data__pb2.Filename.SerializeToString,
        response_deserializer=data__pb2.Response.FromString,
        )
    self.Unlock = channel.unary_unary(
        '/rpc.FileSystem/Unlock',
        request_serializer=data__pb2.Filename.SerializeToString,
        response_deserializer=data__pb2.Response.FromString,
        )


class FileSystemServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CreateFile(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteFile(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListFiles(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Upload(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Download(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Lock(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Unlock(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FileSystemServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateFile': grpc.unary_unary_rpc_method_handler(
          servicer.CreateFile,
          request_deserializer=data__pb2.Filename.FromString,
          response_serializer=data__pb2.Response.SerializeToString,
      ),
      'DeleteFile': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteFile,
          request_deserializer=data__pb2.Filename.FromString,
          response_serializer=data__pb2.Response.SerializeToString,
      ),
      'ListFiles': grpc.unary_stream_rpc_method_handler(
          servicer.ListFiles,
          request_deserializer=data__pb2.Empty.FromString,
          response_serializer=data__pb2.FileList.SerializeToString,
      ),
      'Upload': grpc.stream_unary_rpc_method_handler(
          servicer.Upload,
          request_deserializer=data__pb2.UploadRequest.FromString,
          response_serializer=data__pb2.Response.SerializeToString,
      ),
      'Download': grpc.unary_stream_rpc_method_handler(
          servicer.Download,
          request_deserializer=data__pb2.Filename.FromString,
          response_serializer=data__pb2.Chunk.SerializeToString,
      ),
      'Lock': grpc.unary_unary_rpc_method_handler(
          servicer.Lock,
          request_deserializer=data__pb2.Filename.FromString,
          response_serializer=data__pb2.Response.SerializeToString,
      ),
      'Unlock': grpc.unary_unary_rpc_method_handler(
          servicer.Unlock,
          request_deserializer=data__pb2.Filename.FromString,
          response_serializer=data__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rpc.FileSystem', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
